import streamlit as st
import requests

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
FRAUD_CHECK_SERVICE_URL = "http://fraud_check_service:8000" # URL –Ω–∞—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞

st.set_page_config(page_title="–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö", layout="wide")
st.title("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ")
st.write("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Ö –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –∏ –≤–Ω–µ—à–Ω–∏–º –±–∞–∑–∞–º –Ω–∞ –ø—Ä–∏–∑–Ω–∞–∫–∏ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞.")

# --- –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ---

# –í—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö
data_type_options = {
    "–¢–µ–ª–µ—Ñ–æ–Ω": "phone",
    "Email": "email",
    "URL (–∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞)": "url",
    "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è": "text"
}
selected_data_type_label = st.selectbox(
    "1. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö:",
    options=list(data_type_options.keys())
)
selected_data_type = data_type_options[selected_data_type_label] # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á –¥–ª—è API

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è
if selected_data_type == 'text':
    input_value = st.text_area("2. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:", height=150)
else:
    input_value = st.text_input(f"2. –í–≤–µ–¥–∏—Ç–µ {selected_data_type_label.lower()} –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
submit_button = st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å")

# --- –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ---
if submit_button and input_value:
    with st.spinner("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."):
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫–µ–Ω–¥—É
            request_data = {
                "data_type": selected_data_type,
                "value": input_value
            }
            response = requests.post(f"{FRAUD_CHECK_SERVICE_URL}/check/", json=request_data)
            response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ HTTP –æ—à–∏–±–∫–∏ (4xx, 5xx)

            result = response.json()

            # --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ---
            st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:")
            risk_level = result.get("risk_level", "–û—à–∏–±–∫–∞")
            explanation = result.get("explanation", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ.")
            checked_value = result.get("input_value", input_value) # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–ª–∏

            st.write(f"**–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:** `{checked_value}`")

            if risk_level == "–í—ã—Å–æ–∫–∏–π":
                st.error(f"**–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:** {risk_level}")
                st.warning(f"**–ü–æ—è—Å–Ω–µ–Ω–∏–µ:** {explanation}")
            elif risk_level == "–°—Ä–µ–¥–Ω–∏–π":
                st.warning(f"**–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:** {risk_level}")
                st.info(f"**–ü–æ—è—Å–Ω–µ–Ω–∏–µ:** {explanation}")
            elif risk_level == "–ù–∏–∑–∫–∏–π":
                st.success(f"**–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:** {risk_level}")
                st.info(f"**–ü–æ—è—Å–Ω–µ–Ω–∏–µ:** {explanation}")
            else: # –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–ª–∏ –¥—Ä—É–≥–∞—è –ø—Ä–æ–±–ª–µ–º–∞
                st.error(f"**–°—Ç–∞—Ç—É—Å:** {risk_level}")
                st.error(f"**–ü–æ—è—Å–Ω–µ–Ω–∏–µ:** {explanation}")

        except requests.exceptions.RequestException as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ —Å —Å–µ—Ä–≤–∏—Å–æ–º –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        except Exception as e:
            st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

elif submit_button and not input_value:
    st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.")