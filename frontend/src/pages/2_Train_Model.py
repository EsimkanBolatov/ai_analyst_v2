#frontend/src/pages/2_Train_Model.py
import streamlit as st
import pandas as pd
import requests
import os

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TRAINING_SERVICE_URL = "http://training_service:8000"

st.set_page_config(page_title="–û–±—É—á–µ–Ω–∏–µ —Å–≤–æ–µ–π –º–æ–¥–µ–ª–∏", layout="wide")
st.title("üî¨ –û–±—É—á–µ–Ω–∏–µ —Å–≤–æ–µ–π –º–æ–¥–µ–ª–∏")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª
if 'filename' not in st.session_state:
    st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")
else:
    filename = st.session_state['filename']
    st.info(f"–†–∞–±–æ—Ç–∞–µ–º —Å —Ñ–∞–π–ª–æ–º: `{filename}`")

    # --- –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ ---
    # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –º–æ–≥ –±—ã –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å –∫ file_service –∑–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
    try:
        FILE_SERVICE_URL = "http://file_service:8000"
        response = requests.get(f"{FILE_SERVICE_URL}/columns/{filename}")
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ HTTP –æ—à–∏–±–∫–∏

        columns = response.json().get("columns", [])

        if not columns:
            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞. –§–∞–π–ª –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ –∏–º–µ—Ç—å –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.")
        else:
            # --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
            st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ–ª–∏")
            target_column = st.selectbox("1. –í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –∫–æ–ª–æ–Ω–∫—É (—á—Ç–æ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ–º?)", columns)

            feature_columns = [col for col in columns if col != target_column]
            numerical_features = st.multiselect("2. –í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏", feature_columns)

            available_for_cat = [col for col in feature_columns if col not in numerical_features]
            categorical_features = st.multiselect("3. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏", available_for_cat)

            if st.button("–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ"):
                with st.spinner("–ú–æ–¥–µ–ª—å –æ–±—É—á–∞–µ—Ç—Å—è... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç."):
                    training_request = {
                        "filename": filename,
                        "target_column": target_column,
                        "numerical_features": numerical_features,
                        "categorical_features": categorical_features
                    }

                    response = requests.post(f"{TRAINING_SERVICE_URL}/train/", json=training_request)

                    if response.status_code == 200:
                        result = response.json()
                        st.success("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±—É—á–µ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
                        st.subheader("–û—Ç—á–µ—Ç –æ –∫–∞—á–µ—Å—Ç–≤–µ –º–æ–¥–µ–ª–∏:")
                        st.json(result['report'])
                    else:
                        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {response.text}")

    except requests.exceptions.RequestException as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞ –æ—Ç —Å–µ—Ä–≤–∏—Å–∞: {e}")
    except Exception as e:
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")