import streamlit as st
import requests
import os
import json

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
PREDICTION_SERVICE_URL = "http://prediction_service:8000"
TRAINING_SERVICE_URL = "http://training_service:8000"  # <-- –î–û–ë–ê–í–õ–ï–ù–û

st.set_page_config(page_title="–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ", layout="wide")
st.title("ü§ñ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏")

try:
    # --- –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π —É —Å–µ—Ä–≤–∏—Å–∞ ---
    response = requests.get(f"{TRAINING_SERVICE_URL}/models/")
    response.raise_for_status()
    available_models = response.json().get("models", [])

    if not available_models:
        st.warning(
            "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ 'Train Model'.")
    else:
        selected_model_name = st.selectbox("1. –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è:", available_models)

        if selected_model_name:
            # --- –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ API ---
            config_response = requests.get(f"{TRAINING_SERVICE_URL}/models/{selected_model_name}/config")
            config_response.raise_for_status()
            config = config_response.json()

            # --- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É ---
            with st.form("prediction_form"):
                st.header("2. –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞:")
                input_data = {}

                for col in config['numerical_features']:
                    input_data[col] = st.number_input(f"–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è '{col}'", value=0.0)

                for col in config['categorical_features']:
                    input_data[col] = st.selectbox(f"–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è '{col}'", config['categorical_values'][col])

                submitted = st.form_submit_button("–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")

                if submitted:
                    with st.spinner("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∞–Ω–∞–ª–∏–∑..."):
                        request_data = {"model_filename": selected_model_name, **input_data}

                        pred_response = requests.post(f"{PREDICTION_SERVICE_URL}/predict/", json=request_data)

                        if pred_response.status_code == 200:
                            result = pred_response.json()
                            st.subheader("üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞:")
                            st.success(f"**–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å:** `{result['prediction']}`")

                            st.write("**–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –ø–æ –∫–ª–∞—Å—Å–∞–º:**")
                            st.json(result['probabilities'])
                        else:
                            st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–∏: {pred_response.text}")

except requests.exceptions.RequestException as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –±—ç–∫–µ–Ω–¥-—Å–µ—Ä–≤–∏—Å–æ–º: {e}")
except Exception as e:
    st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")